# Arcwell
# Development Compose Config

name: "arcwell"

volumes:
  excluded_server:
  excluded_admin:
  pgdata:

networks:
  application:
  data:


services:
  server:
    image: arcwell_server
    build:
      context: ./packages/server
      target: develop
      args:
        NODE_ENV: development
        PORT: '3333'
    env_file:
      - ./packages/server/.env.development
    depends_on:
      - db
    networks:
      - application
      - data
    ports:
      - '3333:3333'
      - '5173:5173'
    healthcheck:
      test: curl --fail http://localhost:3333/health || exit 1
      interval: 5s
      timeout: 30s
      retries: 3
      start_period: 30s
    volumes:
      - ./packages/server:/home/node/app
      # Exclude host node_modules from mounting within container; host-installed
      # packages will not conflict with in-container /opt/node/node_modules:
      - excluded_server:/home/node/app/node_modules

  admin:
    image: arcwell_admin
    build:
      context: ./packages/admin
      target: develop
      args:
        NODE_ENV: development
        PORT: '4200'
    env_file:
      - ./packages/admin/.env.development
    networks:
      - application
    ports:
      - '4200:4200'
      - '80:4200'
    volumes:
      - ./packages/admin:/home/node/app
      - excluded_admin:/home/node/app/node_modules
    healthcheck:
      test: curl --fail http://localhost:4200/ || exit 1
      interval: 5s
      timeout: 30s
      retries: 3
      start_period: 30s

  db:
    image: postgres:16-bookworm
    restart: unless-stopped
    ports:
      - '5432:5432'
    environment:
      POSTGRES_DB: arcwell
      POSTGRES_USER: arcwell
      POSTGRES_PASSWORD: arcwell
    networks:
      - data
    healthcheck:
      test: pg_isready -U arcwell -d arcwell || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./support/postgres/init_test.sql:/docker-entrypoint-initdb.d/init_test.sql

  redis:
    image: redis:7-bookworm
    restart: unless-stopped
    #command: redis-server --requirepass arcwell
    ports:
      - '6379:6379'
    networks:
      - data
    volumes:
      - ./support/redis/redis.conf:/usr/local/etc/redis/redis.conf

  mailhog:
    image: mailhog/mailhog
    ports:
      - "1025:1025" # smtp server
      - "8025:8025" # web server
    networks:
      - application
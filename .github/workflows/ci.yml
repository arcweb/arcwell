name: CI Pipeline

on:
  pull_request:

env:
  COMPOSE_FILE: compose.ci.yml
  SERVER_IMAGE: ghcr.io/${{ github.repository }}/server/${{ github.ref_name }}:latest

jobs:
  changes:
    runs-on: ubuntu-latest

    outputs:
      server: ${{ steps.filter.outputs.api }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Filter paths
        uses: dorny/paths-filter@v3
        id: filter
        with:

          filters: |
            server:
              - 'server/**'

  build-server:
    needs: changes

    runs-on: ubuntu-latest
  
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
  
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Pull Server Image for Cache (if exists)
        run: |
          docker pull ${{ env.SERVER_IMAGE }} || echo "No cache found for Server image."

      - name: Build and Push Server Image
        uses: docker/build-push-action@v5
        with:
          context: ./packages/server
          file: ./packages/server/Dockerfile
          push: true
          tags: ${{ env.SERVER_IMAGE }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
      
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
  
  lint-server:
    needs: build-server

    runs-on: ubuntu-latest
  
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Docker Environment
        run: docker info

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Lint API
        run: |
          docker pull ${{ env.SERVER_IMAGE }}
          docker compose run server run npm lint
        continue-on-error: true # Continue on lint errors to allow other jobs to run
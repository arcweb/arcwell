name: Admin CI Pipeline

on:
  pull_request:

env:
  COMPOSE_FILE: packages/admin/compose.ci.yml
  ADMIN_IMAGE: ghcr.io/${{ github.repository }}/admin/${{ github.ref_name }}:latest

jobs:
  changes:
    runs-on: ubuntu-latest

    outputs:
      admin: ${{ steps.filter.outputs.admin }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Filter paths
        uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            admin:
              - 'packages/admin/**'

  build-admin:
    needs: changes
    if: ${{ needs.changes.outputs.admin == 'true' }}

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Pull Admin Image for Cache if exists
        run: |
          docker pull ${{ env.ADMIN_IMAGE }} || echo "No cache found for Admin image."

      - name: Build and Push Admin Image
        uses: docker/build-push-action@v5
        with:
          context: ./packages/admin
          file: ./packages/admin/Dockerfile
          target: develop
          build-args: |
            NODE_ENV=development
            PORT=4200
          push: true
          tags: ${{ env.ADMIN_IMAGE }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
      - name: Health Check
        run: |
          docker compose up -d
          set -e
          echo "Checking health of admin..."
          # Retry the health check up to 10 times with a 10-second interval
          for i in {1..10}; do
            if docker compose exec admin curl --fail http://localhost:4200/; then
              echo "Health check passed!"
              break
            else
              echo "Health check failed, retrying in 5 seconds..."
              sleep 10
            fi
          done
          
          # If we exhausted all retries and curl still fails, exit the job
          if ! docker compose exec admin curl --fail http://localhost:4200/; then
            echo "Health check failed after 10 attempts. Exiting."
            exit 1
          fi

  lint-test-admin:
    needs: build-admin

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Docker Environment
        run: docker info

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Lint Admin
        run: |
          docker pull ${{ env.ADMIN_IMAGE }}
          docker compose run admin npm run lint
          docker compose run admin ng test --watch=false
#        continue-on-error: true

#  test-admin:
#    needs: build-admin
#
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#
#      - name: Setup Docker Environment
#        run: docker info
#
#      - name: Login to GitHub Container Registry
#        uses: docker/login-action@v3
#        with:
#          registry: ghcr.io
#          username: ${{ github.actor }}
#          password: ${{ secrets.GITHUB_TOKEN }}
#
#      - name: Test Admin
#        run: |
#          docker pull ${{ env.ADMIN_IMAGE }}
#          docker compose run admin npm run test --watch=false
